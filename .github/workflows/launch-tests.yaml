name: Launch Own-Git Tests

on:
    push:
        branches: [ main ]
    pull_request:
        branches: [ main ]

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4

            - name: Set up Go
              uses: actions/setup-go@v5
              with:
                go-version: '>=1.24'

            - name: Install dependencies
              run: go mod tidy

            - name: Create Artifact folder
              run : mkdir -p artifacts

            - name: Install go-junit-report
              run: go install github.com/jstemmer/go-junit-report/v2@latest

            - name: Run tests
              run: |
                go test -v 2>&1 ./tests/... | go-junit-report -set-exit-code > artifacts/test.xml
            
            - name: Run tests with coverage
              run: |
                go test -coverprofile=coverage.out ./tests/...
                go tool cover -func=coverage.out > artifacts/coverage.txt
                
                # Add coverage to summary
                echo "## Test Coverage" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                cat artifacts/coverage.txt >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
              
            - name: Run benchmarks
              run: |
                go test -bench=. -benchmem ./tests/... > artifacts/benchmarks.txt
                
                # Add benchmarks to summary
                echo "## Benchmark Results" >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY
                cat artifacts/benchmarks.txt >> $GITHUB_STEP_SUMMARY
                echo '```' >> $GITHUB_STEP_SUMMARY

            - name: Show Unit Test Report
              uses: dorny/test-reporter@v2
              if: success() || failure()  
              with:
                name: Go Tests (Unit Tests)       
                path: artifacts/test.xml
                reporter: java-junit       
            