"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[115],{6378:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>m,contentTitle:()=>r,default:()=>l,frontMatter:()=>c,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"cli-commands/own_commit","title":"own_commit","description":"own commit","source":"@site/docs/cli-commands/own_commit.md","sourceDirName":"cli-commands","slug":"/cli-commands/own_commit","permalink":"/Own-Git/docs/cli-commands/own_commit","draft":false,"unlisted":false,"editUrl":"https://github.com/alexandreLITHAUD/Own-Git/docs/cli-commands/own_commit.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"own_add","permalink":"/Own-Git/docs/cli-commands/own_add"},"next":{"title":"own_init","permalink":"/Own-Git/docs/cli-commands/own_init"}}');var i=o(4848),s=o(8453);const c={},r=void 0,m={},a=[{value:"own commit",id:"own-commit",level:2},{value:"Synopsis",id:"synopsis",level:3},{value:"Examples",id:"examples",level:3},{value:"Options",id:"options",level:3},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:3},{value:"SEE ALSO",id:"see-also",level:3},{value:"Auto generated by spf13/cobra on 20-Apr-2025",id:"auto-generated-by-spf13cobra-on-20-apr-2025",level:6}];function d(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h6:"h6",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"own-commit",children:"own commit"}),"\n",(0,i.jsx)(n.p,{children:"Commit changes to the repository"}),"\n",(0,i.jsx)(n.h3,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:'Commit changes to the repository. This command will create a new commit with the changes made to the repository.\nYou can specify the commit message using the --message flag.\nThe default value is "Commit".'}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"own commit [flags]\n"})}),"\n",(0,i.jsx)(n.h3,{id:"examples",children:"Examples"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'own commit --message "My first commit" --author "John Doe" --date "2025-01-01T00:00:00Z"\n'})}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'  -a, --author string    Author of the commit (default "runner")\n  -d, --date string      Date of the commit in RFC3339 format (default "2025-04-20T15:48:09Z")\n  -h, --help             help for commit\n  -m, --message string   Commit message (default "Commit")\n'})}),"\n",(0,i.jsx)(n.h3,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  -c, --config string   Path to the config file\n  -v, --verbose         Verbose mode\n"})}),"\n",(0,i.jsx)(n.h3,{id:"see-also",children:"SEE ALSO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.a,{href:"/Own-Git/docs/cli-commands/own",children:"own"}),"\t - own-git a simple git copycat using go functionalities"]}),"\n"]}),"\n",(0,i.jsx)(n.h6,{id:"auto-generated-by-spf13cobra-on-20-apr-2025",children:"Auto generated by spf13/cobra on 20-Apr-2025"})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,o)=>{o.d(n,{R:()=>c,x:()=>r});var t=o(6540);const i={},s=t.createContext(i);function c(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);